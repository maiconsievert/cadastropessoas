@model CadastroPessoasDAL.Models.Pessoas

@{
    ViewBag.Title = "Editar pessoa";
}

<main role="main" class="col-md-9 ml-sm-auto col-lg-10 pt-3 px-4">

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3">
        <h1 class="h2">Pessoas</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
                @Html.ActionLink("Inserir", "Create", "Pessoas", null, new { @class = "btn btn-sm btn-outline-secondary" })
            </div>
        </div>
    </div>



    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Editar</h4>
            <hr />
            
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Tipo)
            @Html.HiddenFor(model => model.PessoasEndereco.Id)
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @if (Model != null) {

            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link @{ if (Model.Tipo == "fisica")
                        { @Html.Raw("active") } } " id="fisica" data-toggle="tab" href="#pessoafisica" role="tab" aria-controls="" aria-selected="">Pessoa Física</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @{ if (Model.Tipo == "juridica")
                        { @Html.Raw("active") } }" id="juridica" data-toggle="tab" href="#pessoajuridica" role="tab" aria-controls="" aria-selected="">Pessoa Jurídica</a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">

                <!-- PESSOA FÍSICA -->
                <div class="tab-pane fade @{ if (Model.Tipo == "fisica")
                    { @Html.Raw("show active") } }" id="pessoafisica" role="tabpanel" aria-labelledby="pessoafisica-tab">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cpf, "Campo obrigatório", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <!-- PESSOA JURÍDICA -->
                <div class="tab-pane fade @{ if (Model.Tipo == "juridica")
                    { @Html.Raw("show active") } }" id="pessoajuridica" role="tabpanel" aria-labelledby="pessoajuridica-tab">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cnpj, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Cnpj, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cnpj, "Campo obrigatório", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "Campo obrigatório", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "Campo obrigatório", new { @class = "text-danger" })
                </div>
            </div>




            <div class="endereco">
                <h4>Endereço</h4>

                <div class="ct">

                    <div class="form-horizontal">

                        <div class="form-group row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    @Html.HiddenFor(model => model.Id)
                                    @Html.LabelFor(model => model.PessoasEndereco.Rua, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.PessoasEndereco.Rua, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PessoasEndereco.Rua, "* Obrigatório", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PessoasEndereco.Numero, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.PessoasEndereco.Numero, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PessoasEndereco.Numero, "* Obrigatório", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="form-group row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PessoasEndereco.Bairro, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.PessoasEndereco.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PessoasEndereco.Bairro, "* Obrigatório", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PessoasEndereco.Cidade, htmlAttributes: new { @class = "control-label col-md-12" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.PessoasEndereco.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PessoasEndereco.Cidade, "* Obrigatório", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PessoasEndereco.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-12">
                                        @Html.DropDownListFor(model => model.PessoasEndereco.Estado, ViewBag.EstadosList as List<SelectListItem>, "", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PessoasEndereco.Estado, "* Obrigatório", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>                        
                        
                    </div>

                </div>

            </div>

            <div>
                <div class="col-md-offset-2 col-md-4">
                    <input type="submit" value="Salvar" class="btn btn-default" />
                    @Html.ActionLink("Voltar a lista", "Index", null, new { @class = "btn btn-dark" })
                </div>
            </div>

            }


        </div>
    }


</main>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
